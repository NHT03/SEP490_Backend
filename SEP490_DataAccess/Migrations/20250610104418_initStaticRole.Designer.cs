// <auto-generated />
using System;
using Infrastructure.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(LCFMSDBContext))]
    [Migration("20250610104418_initStaticRole")]
    partial class initStaticRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.EntityModel.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8bea356e-ba31-408d-8af4-847a7795229c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(2025, 6, 10, 17, 44, 17, 749, DateTimeKind.Local).AddTicks(4963),
                            IsActive = true,
                            RoleName = "Company Admin"
                        },
                        new
                        {
                            Id = new Guid("9acc44be-f14d-402d-9d00-f31ee0826081"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(2025, 6, 10, 17, 44, 17, 749, DateTimeKind.Local).AddTicks(4977),
                            IsActive = true,
                            RoleName = "Technical Staff"
                        },
                        new
                        {
                            Id = new Guid("935a0aa2-ac35-4e3b-bee8-2e83cfa881b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(2025, 6, 10, 17, 44, 17, 749, DateTimeKind.Local).AddTicks(4981),
                            IsActive = true,
                            RoleName = "Feed Room Staff"
                        },
                        new
                        {
                            Id = new Guid("d8ad3fa3-113c-48ac-8abd-658e5af95712"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(2025, 6, 10, 17, 44, 17, 749, DateTimeKind.Local).AddTicks(4984),
                            IsActive = true,
                            RoleName = "Medicine Room Staff"
                        },
                        new
                        {
                            Id = new Guid("22dd561f-98db-4272-a70c-d725756176f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(2025, 6, 10, 17, 44, 17, 749, DateTimeKind.Local).AddTicks(4987),
                            IsActive = true,
                            RoleName = "Weighing Room Staff"
                        },
                        new
                        {
                            Id = new Guid("152f58f4-b35b-49e9-8eeb-c6ea8bb628aa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(2025, 6, 10, 17, 44, 17, 749, DateTimeKind.Local).AddTicks(4989),
                            IsActive = true,
                            RoleName = "Farmer"
                        },
                        new
                        {
                            Id = new Guid("c6f6f482-ba36-477b-98eb-e881d485b923"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(2025, 6, 10, 17, 44, 17, 749, DateTimeKind.Local).AddTicks(4999),
                            IsActive = true,
                            RoleName = "Sales Staff"
                        },
                        new
                        {
                            Id = new Guid("fbcfb2f8-cf83-43a3-bd07-0a69726e239f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(2025, 6, 10, 17, 44, 17, 749, DateTimeKind.Local).AddTicks(5002),
                            IsActive = true,
                            RoleName = "Customer"
                        });
                });

            modelBuilder.Entity("Entities.EntityModel.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f721ba7-08cf-415a-832f-6e6b7e01b782"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(2025, 6, 10, 17, 44, 17, 749, DateTimeKind.Local).AddTicks(5132),
                            Email = "admin@a",
                            IsActive = true,
                            Password = "123",
                            RoleId = new Guid("8bea356e-ba31-408d-8af4-847a7795229c"),
                            UserName = "Company Admin"
                        });
                });

            modelBuilder.Entity("Entities.EntityModel.User", b =>
                {
                    b.HasOne("Entities.EntityModel.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
